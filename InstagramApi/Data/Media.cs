using System.Text.Json.Serialization;

namespace InstagramApi.Data; 

public record Media(
        [property: JsonPropertyName("taken_at")] int TakenAt,
        [property: JsonPropertyName("pk")] string Pk,
        [property: JsonPropertyName("id")] string Id,
        [property: JsonPropertyName("device_timestamp")] object DeviceTimestamp,
        [property: JsonPropertyName("client_cache_key")] string ClientCacheKey,
        [property: JsonPropertyName("filter_type")] int FilterType,
        [property: JsonPropertyName("caption_is_edited")] bool CaptionIsEdited,
        [property: JsonPropertyName("like_and_view_counts_disabled")] bool LikeAndViewCountsDisabled,
        [property: JsonPropertyName("is_reshare_of_text_post_app_media_in_ig")] bool IsReshareOfTextPostAppMediaInIg,
        [property: JsonPropertyName("deleted_reason")] int DeletedReason,
        [property: JsonPropertyName("integrity_review_decision")] string IntegrityReviewDecision,
        [property: JsonPropertyName("has_shared_to_fb")] int HasSharedToFb,
        [property: JsonPropertyName("is_unified_video")] bool IsUnifiedVideo,
        [property: JsonPropertyName("should_request_ads")] bool ShouldRequestAds,
        [property: JsonPropertyName("is_visual_reply_commenter_notice_enabled")] bool IsVisualReplyCommenterNoticeEnabled,
        [property: JsonPropertyName("commerciality_status")] string CommercialityStatus,
        [property: JsonPropertyName("explore_hide_comments")] bool ExploreHideComments,
        [property: JsonPropertyName("media_type")] int MediaType,
        [property: JsonPropertyName("code")] string Code,
        [property: JsonPropertyName("can_viewer_reshare")] bool CanViewerReshare,
        [property: JsonPropertyName("caption")] TextContent Caption,
        [property: JsonPropertyName("clips_tab_pinned_user_ids")] IReadOnlyList<object> ClipsTabPinnedUserIds,
        [property: JsonPropertyName("comment_inform_treatment")] CommentInformTreatment CommentInformTreatment,
        [property: JsonPropertyName("has_viewer_saved")] bool HasViewerSaved,
        [property: JsonPropertyName("saved_collection_ids")] IReadOnlyList<string> SavedCollectionIds,
        [property: JsonPropertyName("sharing_friction_info")] SharingFrictionInfo SharingFrictionInfo,
        [property: JsonPropertyName("accessibility_caption")] string AccessibilityCaption,
        [property: JsonPropertyName("original_media_has_visual_reply_media")] bool OriginalMediaHasVisualReplyMedia,
        [property: JsonPropertyName("can_viewer_save")] bool CanViewerSave,
        [property: JsonPropertyName("is_in_profile_grid")] bool IsInProfileGrid,
        [property: JsonPropertyName("profile_grid_control_enabled")] bool ProfileGridControlEnabled,
        [property: JsonPropertyName("featured_products")] IReadOnlyList<object> FeaturedProducts,
        [property: JsonPropertyName("is_comments_gif_composer_enabled")] bool IsCommentsGifComposerEnabled,
        [property: JsonPropertyName("product_suggestions")] IReadOnlyList<object> ProductSuggestions,
        [property: JsonPropertyName("user")] User User,
        [property: JsonPropertyName("image_versions2")] ImageVersions ImageVersions,
        [property: JsonPropertyName("original_width")] int OriginalWidth,
        [property: JsonPropertyName("original_height")] int OriginalHeight,
        [property: JsonPropertyName("product_type")] string ProductType,
        [property: JsonPropertyName("is_paid_partnership")] bool IsPaidPartnership,
        [property: JsonPropertyName("music_metadata")] MusicMetadata MusicMetadata,
        [property: JsonPropertyName("organic_tracking_token")] string OrganicTrackingToken,
        [property: JsonPropertyName("ig_media_sharing_disabled")] bool IgMediaSharingDisabled,
        [property: JsonPropertyName("comment_likes_enabled")] bool CommentLikesEnabled,
        [property: JsonPropertyName("max_num_visible_preview_comments")] int MaxNumVisiblePreviewComments,
        [property: JsonPropertyName("has_more_comments")] bool HasMoreComments,
        [property: JsonPropertyName("next_max_id")] string NextMaxId,
        [property: JsonPropertyName("comment_threading_enabled")] bool CommentThreadingEnabled,
        [property: JsonPropertyName("preview_comments")] IReadOnlyList<TextContent> PreviewComments,
        [property: JsonPropertyName("comments")] IReadOnlyList<TextContent> Comments,
        [property: JsonPropertyName("comment_count")] int CommentCount,
        [property: JsonPropertyName("can_view_more_preview_comments")] bool CanViewMorePreviewComments,
        [property: JsonPropertyName("hide_view_all_comment_entrypoint")] bool HideViewAllCommentEntrypoint,
        [property: JsonPropertyName("inline_composer_display_condition")] string InlineComposerDisplayCondition,
        [property: JsonPropertyName("has_liked")] bool HasLiked,
        [property: JsonPropertyName("like_count")] int LikeCount,
        [property: JsonPropertyName("shop_routing_user_id")] object ShopRoutingUserId,
        [property: JsonPropertyName("can_see_insights_as_brand")] bool CanSeeInsightsAsBrand,
        [property: JsonPropertyName("is_organic_product_tagging_eligible")] bool IsOrganicProductTaggingEligible,
        [property: JsonPropertyName("has_delayed_metadata")] bool HasDelayedMetadata,
        [property: JsonPropertyName("is_open_to_public_submission")] bool IsOpenToPublicSubmission,
        [property: JsonPropertyName("carousel_media_count")] int? CarouselMediaCount,
        [property: JsonPropertyName("carousel_media")] IReadOnlyList<CarouselMedium> CarouselMedia,
        [property: JsonPropertyName("carousel_media_ids")] IReadOnlyList<string> CarouselMediaIds,
        [property: JsonPropertyName("commerce_integrity_review_decision")] string CommerceIntegrityReviewDecision
    );